{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Response": {
                "type": "Response",
                "kind": "Http",
                "inputs": {
                    "statusCode": 200,
                    "headers": {
                        "contentType": "application/json"
                    },
                    "body": "@json(triggerBody())['account']['name']"
                },
                "runAfter": {
                    "Upload_blob_to_storage_container": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Upload_blob_to_storage_container": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "containerName": "monitor",
                        "blobName": "@concat(json(triggerBody())['account']['name'],'_',utcNow())",
                        "content": "@triggerBody()"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob-2",
                        "operationId": "uploadBlob",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                },
                "runAfter": {}
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "When_a_HTTP_request_is_received": {
                "type": "Request",
                "kind": "Http",
                "inputs": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "account": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "object",
                                        "properties": {
                                            "number": {
                                                "type": "string"
                                            },
                                            "street": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            },
                                            "postalCode": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "method": "POST"
                }
            }
        },
        "parameters": {}
    },
    "kind": "Stateless"
}